
@using DAModels = DatabaseAccess.Models;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<DAModels::Contact>
@{
    var sortingTypes = new string[] { "Без сортировки", "По имени", "По дате изменения", "По дате рождения" };
    var profileTypes = new string[] { "Все контакты", "Аккаунты", "Созданные", };
    const string cardStyle = "card m-2 m-sm-3 shadow-sm border border-secondary flex-row flex-sm-column";

    var currentPage = int.Parse(this.ViewData["CurrentPage"]!.ToString()!);
    var recordOnPage = int.Parse(this.ViewData["RecordOnPage"]!.ToString()!);
    var pagesCount = int.Parse(this.ViewData["PagesCount"]!.ToString()!);

    void RenderPageActionLink(string text, bool isDisabled, int page)
    {
        <li class="page-item @((isDisabled ? "disabled" : ""))">
            @this.Html.ActionLink(text, "ProfileInfo", new UserProfileModel()
            { 
                ProfileType = this.ViewData["ProfileType"]!.ToString()!, RecordOnPage = recordOnPage,
                CurrentPage = page, SortingType = this.ViewData["SortingType"]!.ToString()!,
            }, 
            new { @class="page-link", style=$"color:{(isDisabled ? "" : "var(--main-color)")};" })
        </li>
    }
}
<div class="container p-0 my-5">
    @if(this.ViewData["Message"] != null)
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert" style="border-radius:16px;">
            <strong>Уведомление!</strong>&nbsp;@this.ViewData["Message"]!.ToString()!
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    <div class="row mb-0 justify-content-between">

        <div class="col-12 col-md-6 text-center text-md-start mb-3 mb-md-0">
            <h1 class="fs-2 m-0" style="color:var(--main-color);font-weight: 600;">
                Меню контактов&nbsp<span class="badge rounded-pill bg-danger" style="font-size:12px;">Contact</span>
            </h1>
            <p class="form-text m-0" style="font-size:18px;">Список доступных контактов</p>
        </div>
        <div class="col-12 col-md-6 d-flex flex-row align-items-center">
            @using (this.Html.BeginForm("ProfileInfo", "UserProfile", FormMethod.Get, new { @class="d-inline flex-grow-1 mx-1" }))
            {
            <div class="d-flex input-group has-validation">
                @this.Html.TextBox("searchquery", "", new {@class=$"form-control", placeholder="Контакт для поиска", maxlength="50"})
                <button class="btn btn-success fs-5" type="submit"
                    style="background-color:var(--main-color);border-color:var(--main-color)" value="Найти">
                    <i class="bi bi-search"></i>
                </button>
            </div>
            }
            <div class="d-flex justify-content-center mx-1">
                <button class="btn btn-success w-100 fs-5" style="background-color:var(--main-color);border-color:var(--main-color)"
                    data-bs-toggle="collapse" href="#collapseSearch">
                    <i class="bi bi-person-fill-add"></i>
                </button>
            </div>
            <div class="d-flex justify-content-center mx-1">
                <a class="btn btn-success w-100 fs-5" style="background-color:var(--main-color);border-color:var(--main-color)"
                    asp-asp-controller="UserProfile" asp-action="GetDocument"> <i class="bi bi-file-earmark-arrow-down-fill"></i>
                </a>
            </div>
        </div>
    </div>
    <div class="row collapse my-3 justify-content-end" id="collapseSearch">
        <div class="col-12 col-sm-6"> @await this.Component.InvokeAsync("FriendCreator") </div>
    </div>
    @using (this.Html.BeginForm("ProfileInfo", "UserProfile", FormMethod.Get, new { @class="row mb-3 justify-content-end" }))
    {
    <div class="col-12 сщд-sm-6 col-lg-4">
        <label class="form-label">&nbsp;</label>

        <div class="input-group mb-2">
            <span class="input-group-text">Контактов на странице:</span>
            <select id="count" name="recordonpage" class="form-select" onchange="this.form.submit()">
                @for(var index = UserProfileModel.MinRecordOnPage; index < UserProfileModel.MaxRecordOnPage; index++) 
                {
                if (index.ToString() == this.ViewData["RecordOnPage"]!.ToString()) { <option value="@index" selected>@(index) записи(ей)</option> }
                else { <option value="@index">@index записи(ей)</option> }
                }
            </select>
        </div>
    </div>
    <div class="col-12 сщд-sm-6 col-lg-4">
        <label class="form-label">Параметры сортировки:</label>
        <div class="input-group mb-2">

            <span class="input-group-text"><i class="bi bi-card-list"></i></span>
            <select id="order" name="sortingtype" class="form-select" onchange="this.form.submit()">
                @foreach(var selectedItem in sortingTypes) 
                {
                if (selectedItem == this.ViewData["SortingType"]!.ToString()) { <option value="@selectedItem" selected>@selectedItem</option> }
                else { <option value="@selectedItem">@selectedItem</option> }
                }
            </select>
        </div>
    </div>
    <div class="col-12 сщд-sm-6 col-lg-4">
        <label class="form-label">Параметры отображения:</label>
        <div class="input-group mb-2">

            <span class="input-group-text"><i class="bi bi-person-square"></i></span>
            <select id="profiletype" name="profiletype" class="form-select" onchange="this.form.submit()">
                @foreach(var selectedItem in profileTypes) 
                {
                if (selectedItem == this.ViewData["ProfileType"]!.ToString()) { <option value="@selectedItem" selected>@selectedItem</option> }
                else { <option value="@selectedItem">@selectedItem</option> }
                }
            </select>
        </div>
    </div>
    @this.Html.Hidden("Mode", UserProfileModel.PageMode.Contacts);
    }
    <div class="row mb-3 gx-2 justify-content-center row-cols-1 row-cols-md-3 row-cols-sm-2 row-cols-lg-4 row-cols-xl-5">
        @foreach(var friendRecord in this.Model)
        {
        <div class="col mb-1 mb-sm-3">
            <div class="@cardStyle d-none d-sm-flex" style="border-radius:16px;">
                <img src="@friendRecord.Userpicture!.Filepath" class="card-img-top w-75 p-3 align-self-center" alt="...">

                @*@{await RenderCardBody(friendRecord.Value, $"{friendRecord.Value.Name} {friendRecord.Value.Surname}", 
                    friendRecord.Value.Authorization != null, friendRecord.Key.Typeofdating);}*@
                @await this.Component.InvokeAsync("ContactCard", new { contactModel = friendRecord })
            </div>
            <div class="@cardStyle d-sm-none d-inline-flex" style="border-radius:14px;">
                <img src="@friendRecord.Userpicture!.Filepath" class="card-img-top w-25 p-3 align-self-center" alt="...">

                @*@{await RenderCardBody(friendRecord.Value, $"{friendRecord.Value.Name} {friendRecord.Value.Surname}", 
                    friendRecord.Value.Authorization != null, friendRecord.Key.Typeofdating);}*@
                @await this.Component.InvokeAsync("ContactCard", new { contactModel = friendRecord })
            </div>
        </div>
        }
        @if(this.Model.Count() <= 0) { 
        <div class="col w-100 m-3 text-center">
            <span class="fs-4" style="color:var(--main-color)">Еще не добавлено ни одного контакта</span>
        </div> 
        }
    </div>
    <nav class="table-responsive row justify-content-start mx-3">
        <ul class="pagination col-12" style="overflow-x: scroll;">
            @{RenderPageActionLink("Предыдующая", (currentPage <= 0), currentPage <= 0 ? 0 : currentPage - 1);}

            <div class="d-inline-flex p-0" style="overflow-x:scroll;">
                @for(var page = 0; page < pagesCount; page++) RenderPageActionLink((page + 1).ToString(), (page == currentPage), page);
            </div>
            @{RenderPageActionLink("Следующая", (currentPage >= pagesCount - 1), 
                currentPage >= pagesCount - 1 ? currentPage : currentPage + 1);}
        </ul>
    </nav>
</div>
