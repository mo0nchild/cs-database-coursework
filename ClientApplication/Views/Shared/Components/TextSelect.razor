@using Microsoft.AspNetCore.Components.Forms;
@using Microsoft.AspNetCore.Components.Web;

<label for="family" class="form-label">@this.LabelTitle:</label>
<div class="@((this.GroupIcon != null ? "input-group" : "")) has-validation">
    @if(this.GroupIcon != null)
    {
        <span class="input-group-text"><i class="@this.GroupIcon"></i></span>
    }
    <select id="@this.ItemId" class="form-select" @onchange="@(this.ValueChangeHandler)">
        @foreach(var selectedItem in this.ElementList) 
        {
            if (selectedItem == this.ComponentValue) { <option value="@selectedItem" selected>@selectedItem</option> }
            else { <option value="@selectedItem">@selectedItem</option> }
        }
    </select>
</div>
@code {
    [ParameterAttribute] public string LabelTitle { get; set; } = string.Empty;
    [ParameterAttribute] public string ItemId { get; set; } = string.Empty;
    [ParameterAttribute] public string? GroupIcon { get; set; } = default;

    [ParameterAttribute, EditorRequiredAttribute]
    public List<string> ElementList { get; set; } = new();

    protected string componentValue = string.Empty;

    [ParameterAttribute] public string ComponentValue 
    { 
        get => this.componentValue; set { this.componentValue = value; }
    }
    [ParameterAttribute] public EventCallback<string> ComponentValueChanged { get; set; }

    protected async Task ValueChangeHandler(ChangeEventArgs args)
    {
        this.componentValue = args.Value!.ToString()!;
        await this.ComponentValueChanged.InvokeAsync(this.componentValue);
    }
}
